# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = zaz$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_zaz_OBJECTS = zaz-main.$(OBJEXT) zaz-audiobuffer.$(OBJEXT) \
	zaz-mixer.$(OBJEXT) zaz-oggsample.$(OBJEXT) \
	zaz-scene.$(OBJEXT) zaz-settings.$(OBJEXT) \
	zaz-wavesample.$(OBJEXT) zaz-streamingoggsample.$(OBJEXT) \
	zaz-frame_events.$(OBJEXT) zaz-ogvexport.$(OBJEXT) \
	zaz-bezier.$(OBJEXT) zaz-textureloader.$(OBJEXT) \
	zaz-player.$(OBJEXT) zaz-level.$(OBJEXT) \
	zaz-ballpath.$(OBJEXT) zaz-game.$(OBJEXT) zaz-editor.$(OBJEXT) \
	zaz-mainmenu.$(OBJEXT) zaz-menu.$(OBJEXT) \
	zaz-gameloop.$(OBJEXT) zaz-hiscores.$(OBJEXT) \
	zaz-lineeditor.$(OBJEXT) zaz-tests.$(OBJEXT) \
	zaz-profile.$(OBJEXT) zaz-directorylister.$(OBJEXT) \
	zaz-levelset.$(OBJEXT) zaz-splash.$(OBJEXT)
zaz_OBJECTS = $(am_zaz_OBJECTS)
am__DEPENDENCIES_1 =
zaz_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
zaz_LINK = $(CXXLD) $(zaz_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/zaz-audiobuffer.Po \
	./$(DEPDIR)/zaz-ballpath.Po ./$(DEPDIR)/zaz-bezier.Po \
	./$(DEPDIR)/zaz-directorylister.Po ./$(DEPDIR)/zaz-editor.Po \
	./$(DEPDIR)/zaz-frame_events.Po ./$(DEPDIR)/zaz-game.Po \
	./$(DEPDIR)/zaz-gameloop.Po ./$(DEPDIR)/zaz-hiscores.Po \
	./$(DEPDIR)/zaz-level.Po ./$(DEPDIR)/zaz-levelset.Po \
	./$(DEPDIR)/zaz-lineeditor.Po ./$(DEPDIR)/zaz-main.Po \
	./$(DEPDIR)/zaz-mainmenu.Po ./$(DEPDIR)/zaz-menu.Po \
	./$(DEPDIR)/zaz-mixer.Po ./$(DEPDIR)/zaz-oggsample.Po \
	./$(DEPDIR)/zaz-ogvexport.Po ./$(DEPDIR)/zaz-player.Po \
	./$(DEPDIR)/zaz-profile.Po ./$(DEPDIR)/zaz-scene.Po \
	./$(DEPDIR)/zaz-settings.Po ./$(DEPDIR)/zaz-splash.Po \
	./$(DEPDIR)/zaz-streamingoggsample.Po ./$(DEPDIR)/zaz-tests.Po \
	./$(DEPDIR)/zaz-textureloader.Po ./$(DEPDIR)/zaz-wavesample.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(zaz_SOURCES)
DIST_SOURCES = $(zaz_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FTGL_CFLAGS = @FTGL_CFLAGS@
FTGL_LIBS = @FTGL_LIBS@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSUB = @POSUB@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
ZAZ_CFLAGS = @ZAZ_CFLAGS@
ZAZ_LIBS = @ZAZ_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
applicationdir = @applicationdir@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
enable_splash = @enable_splash@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
icondir = @icondir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = \
	-DPACKAGE_LOCALE_DIR=\""$(localedir)"\" \
	-DPACKAGE_SRC_DIR=\""$(srcdir)"\" \
	-DPACKAGE_DATA_DIR=\""$(datadir)"\"\
	-I/usr/include/freetype2\
	-DENABLE_SPLASH=$(enable_splash)

AM_CFLAGS = \
	 -Wall\
	 -g

zaz_SOURCES = \
	main.cpp\
	common.h \
	error.h \
	audiobuffer.cpp \
	audiobuffer.h \
	mixer.cpp \
	mixer.h \
	oggsample.cpp \
	sample.h \
	scene.cpp \
	scene.h \
	settings.cpp \
	settings.h \
	wavesample.cpp \
	streamingoggsample.cpp \
	frame_events.cpp \
	frame_events.h \
	ogvexport.h \
	ogvexport.cpp \
	bezier.h \
	bezier.cpp \
	textureloader.h \
	textureloader.cpp \
	player.h \
	player.cpp \
	level.h \
	level.cpp \
	ballpath.h \
	ballpath.cpp \
	game.h \
	game.cpp \
	editor.h \
	editor.cpp \
	mainmenu.h \
	mainmenu.cpp \
	menu.h \
	menu.cpp \
	gameloop.h \
	gameloop.cpp \
	hiscores.h \
	hiscores.cpp \
	lineeditor.h \
	lineeditor.cpp \
	gettext.h \
	tests.h \
	tests.cpp \
	profile.h \
	profile.cpp \
	directorylister.cpp \
	directorylister.h \
	levelset.h \
	levelset.cpp \
	splash.h \
	splash.cpp 

zaz_CXXFLAGS = $(ZAZ_CFLAGS)
zaz_LDADD = $(ZAZ_LIBS) $(FTGL_LIBS) $(GL_LIBS) @LIBINTL@
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

zaz$(EXEEXT): $(zaz_OBJECTS) $(zaz_DEPENDENCIES) $(EXTRA_zaz_DEPENDENCIES) 
	@rm -f zaz$(EXEEXT)
	$(AM_V_CXXLD)$(zaz_LINK) $(zaz_OBJECTS) $(zaz_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-audiobuffer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-ballpath.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-bezier.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-directorylister.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-editor.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-frame_events.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-game.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-gameloop.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-hiscores.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-level.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-levelset.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-lineeditor.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-main.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-mainmenu.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-menu.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-mixer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-oggsample.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-ogvexport.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-player.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-profile.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-scene.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-settings.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-splash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-streamingoggsample.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-tests.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-textureloader.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zaz-wavesample.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

zaz-main.o: main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-main.o -MD -MP -MF $(DEPDIR)/zaz-main.Tpo -c -o zaz-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-main.Tpo $(DEPDIR)/zaz-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main.cpp' object='zaz-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

zaz-main.obj: main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-main.obj -MD -MP -MF $(DEPDIR)/zaz-main.Tpo -c -o zaz-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-main.Tpo $(DEPDIR)/zaz-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='main.cpp' object='zaz-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

zaz-audiobuffer.o: audiobuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-audiobuffer.o -MD -MP -MF $(DEPDIR)/zaz-audiobuffer.Tpo -c -o zaz-audiobuffer.o `test -f 'audiobuffer.cpp' || echo '$(srcdir)/'`audiobuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-audiobuffer.Tpo $(DEPDIR)/zaz-audiobuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='audiobuffer.cpp' object='zaz-audiobuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-audiobuffer.o `test -f 'audiobuffer.cpp' || echo '$(srcdir)/'`audiobuffer.cpp

zaz-audiobuffer.obj: audiobuffer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-audiobuffer.obj -MD -MP -MF $(DEPDIR)/zaz-audiobuffer.Tpo -c -o zaz-audiobuffer.obj `if test -f 'audiobuffer.cpp'; then $(CYGPATH_W) 'audiobuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/audiobuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-audiobuffer.Tpo $(DEPDIR)/zaz-audiobuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='audiobuffer.cpp' object='zaz-audiobuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-audiobuffer.obj `if test -f 'audiobuffer.cpp'; then $(CYGPATH_W) 'audiobuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/audiobuffer.cpp'; fi`

zaz-mixer.o: mixer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-mixer.o -MD -MP -MF $(DEPDIR)/zaz-mixer.Tpo -c -o zaz-mixer.o `test -f 'mixer.cpp' || echo '$(srcdir)/'`mixer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-mixer.Tpo $(DEPDIR)/zaz-mixer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='mixer.cpp' object='zaz-mixer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-mixer.o `test -f 'mixer.cpp' || echo '$(srcdir)/'`mixer.cpp

zaz-mixer.obj: mixer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-mixer.obj -MD -MP -MF $(DEPDIR)/zaz-mixer.Tpo -c -o zaz-mixer.obj `if test -f 'mixer.cpp'; then $(CYGPATH_W) 'mixer.cpp'; else $(CYGPATH_W) '$(srcdir)/mixer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-mixer.Tpo $(DEPDIR)/zaz-mixer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='mixer.cpp' object='zaz-mixer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-mixer.obj `if test -f 'mixer.cpp'; then $(CYGPATH_W) 'mixer.cpp'; else $(CYGPATH_W) '$(srcdir)/mixer.cpp'; fi`

zaz-oggsample.o: oggsample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-oggsample.o -MD -MP -MF $(DEPDIR)/zaz-oggsample.Tpo -c -o zaz-oggsample.o `test -f 'oggsample.cpp' || echo '$(srcdir)/'`oggsample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-oggsample.Tpo $(DEPDIR)/zaz-oggsample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='oggsample.cpp' object='zaz-oggsample.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-oggsample.o `test -f 'oggsample.cpp' || echo '$(srcdir)/'`oggsample.cpp

zaz-oggsample.obj: oggsample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-oggsample.obj -MD -MP -MF $(DEPDIR)/zaz-oggsample.Tpo -c -o zaz-oggsample.obj `if test -f 'oggsample.cpp'; then $(CYGPATH_W) 'oggsample.cpp'; else $(CYGPATH_W) '$(srcdir)/oggsample.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-oggsample.Tpo $(DEPDIR)/zaz-oggsample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='oggsample.cpp' object='zaz-oggsample.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-oggsample.obj `if test -f 'oggsample.cpp'; then $(CYGPATH_W) 'oggsample.cpp'; else $(CYGPATH_W) '$(srcdir)/oggsample.cpp'; fi`

zaz-scene.o: scene.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-scene.o -MD -MP -MF $(DEPDIR)/zaz-scene.Tpo -c -o zaz-scene.o `test -f 'scene.cpp' || echo '$(srcdir)/'`scene.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-scene.Tpo $(DEPDIR)/zaz-scene.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='scene.cpp' object='zaz-scene.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-scene.o `test -f 'scene.cpp' || echo '$(srcdir)/'`scene.cpp

zaz-scene.obj: scene.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-scene.obj -MD -MP -MF $(DEPDIR)/zaz-scene.Tpo -c -o zaz-scene.obj `if test -f 'scene.cpp'; then $(CYGPATH_W) 'scene.cpp'; else $(CYGPATH_W) '$(srcdir)/scene.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-scene.Tpo $(DEPDIR)/zaz-scene.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='scene.cpp' object='zaz-scene.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-scene.obj `if test -f 'scene.cpp'; then $(CYGPATH_W) 'scene.cpp'; else $(CYGPATH_W) '$(srcdir)/scene.cpp'; fi`

zaz-settings.o: settings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-settings.o -MD -MP -MF $(DEPDIR)/zaz-settings.Tpo -c -o zaz-settings.o `test -f 'settings.cpp' || echo '$(srcdir)/'`settings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-settings.Tpo $(DEPDIR)/zaz-settings.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='settings.cpp' object='zaz-settings.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-settings.o `test -f 'settings.cpp' || echo '$(srcdir)/'`settings.cpp

zaz-settings.obj: settings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-settings.obj -MD -MP -MF $(DEPDIR)/zaz-settings.Tpo -c -o zaz-settings.obj `if test -f 'settings.cpp'; then $(CYGPATH_W) 'settings.cpp'; else $(CYGPATH_W) '$(srcdir)/settings.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-settings.Tpo $(DEPDIR)/zaz-settings.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='settings.cpp' object='zaz-settings.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-settings.obj `if test -f 'settings.cpp'; then $(CYGPATH_W) 'settings.cpp'; else $(CYGPATH_W) '$(srcdir)/settings.cpp'; fi`

zaz-wavesample.o: wavesample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-wavesample.o -MD -MP -MF $(DEPDIR)/zaz-wavesample.Tpo -c -o zaz-wavesample.o `test -f 'wavesample.cpp' || echo '$(srcdir)/'`wavesample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-wavesample.Tpo $(DEPDIR)/zaz-wavesample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wavesample.cpp' object='zaz-wavesample.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-wavesample.o `test -f 'wavesample.cpp' || echo '$(srcdir)/'`wavesample.cpp

zaz-wavesample.obj: wavesample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-wavesample.obj -MD -MP -MF $(DEPDIR)/zaz-wavesample.Tpo -c -o zaz-wavesample.obj `if test -f 'wavesample.cpp'; then $(CYGPATH_W) 'wavesample.cpp'; else $(CYGPATH_W) '$(srcdir)/wavesample.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-wavesample.Tpo $(DEPDIR)/zaz-wavesample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='wavesample.cpp' object='zaz-wavesample.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-wavesample.obj `if test -f 'wavesample.cpp'; then $(CYGPATH_W) 'wavesample.cpp'; else $(CYGPATH_W) '$(srcdir)/wavesample.cpp'; fi`

zaz-streamingoggsample.o: streamingoggsample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-streamingoggsample.o -MD -MP -MF $(DEPDIR)/zaz-streamingoggsample.Tpo -c -o zaz-streamingoggsample.o `test -f 'streamingoggsample.cpp' || echo '$(srcdir)/'`streamingoggsample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-streamingoggsample.Tpo $(DEPDIR)/zaz-streamingoggsample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='streamingoggsample.cpp' object='zaz-streamingoggsample.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-streamingoggsample.o `test -f 'streamingoggsample.cpp' || echo '$(srcdir)/'`streamingoggsample.cpp

zaz-streamingoggsample.obj: streamingoggsample.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-streamingoggsample.obj -MD -MP -MF $(DEPDIR)/zaz-streamingoggsample.Tpo -c -o zaz-streamingoggsample.obj `if test -f 'streamingoggsample.cpp'; then $(CYGPATH_W) 'streamingoggsample.cpp'; else $(CYGPATH_W) '$(srcdir)/streamingoggsample.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-streamingoggsample.Tpo $(DEPDIR)/zaz-streamingoggsample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='streamingoggsample.cpp' object='zaz-streamingoggsample.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-streamingoggsample.obj `if test -f 'streamingoggsample.cpp'; then $(CYGPATH_W) 'streamingoggsample.cpp'; else $(CYGPATH_W) '$(srcdir)/streamingoggsample.cpp'; fi`

zaz-frame_events.o: frame_events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-frame_events.o -MD -MP -MF $(DEPDIR)/zaz-frame_events.Tpo -c -o zaz-frame_events.o `test -f 'frame_events.cpp' || echo '$(srcdir)/'`frame_events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-frame_events.Tpo $(DEPDIR)/zaz-frame_events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='frame_events.cpp' object='zaz-frame_events.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-frame_events.o `test -f 'frame_events.cpp' || echo '$(srcdir)/'`frame_events.cpp

zaz-frame_events.obj: frame_events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-frame_events.obj -MD -MP -MF $(DEPDIR)/zaz-frame_events.Tpo -c -o zaz-frame_events.obj `if test -f 'frame_events.cpp'; then $(CYGPATH_W) 'frame_events.cpp'; else $(CYGPATH_W) '$(srcdir)/frame_events.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-frame_events.Tpo $(DEPDIR)/zaz-frame_events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='frame_events.cpp' object='zaz-frame_events.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-frame_events.obj `if test -f 'frame_events.cpp'; then $(CYGPATH_W) 'frame_events.cpp'; else $(CYGPATH_W) '$(srcdir)/frame_events.cpp'; fi`

zaz-ogvexport.o: ogvexport.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-ogvexport.o -MD -MP -MF $(DEPDIR)/zaz-ogvexport.Tpo -c -o zaz-ogvexport.o `test -f 'ogvexport.cpp' || echo '$(srcdir)/'`ogvexport.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-ogvexport.Tpo $(DEPDIR)/zaz-ogvexport.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ogvexport.cpp' object='zaz-ogvexport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-ogvexport.o `test -f 'ogvexport.cpp' || echo '$(srcdir)/'`ogvexport.cpp

zaz-ogvexport.obj: ogvexport.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-ogvexport.obj -MD -MP -MF $(DEPDIR)/zaz-ogvexport.Tpo -c -o zaz-ogvexport.obj `if test -f 'ogvexport.cpp'; then $(CYGPATH_W) 'ogvexport.cpp'; else $(CYGPATH_W) '$(srcdir)/ogvexport.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-ogvexport.Tpo $(DEPDIR)/zaz-ogvexport.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ogvexport.cpp' object='zaz-ogvexport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-ogvexport.obj `if test -f 'ogvexport.cpp'; then $(CYGPATH_W) 'ogvexport.cpp'; else $(CYGPATH_W) '$(srcdir)/ogvexport.cpp'; fi`

zaz-bezier.o: bezier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-bezier.o -MD -MP -MF $(DEPDIR)/zaz-bezier.Tpo -c -o zaz-bezier.o `test -f 'bezier.cpp' || echo '$(srcdir)/'`bezier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-bezier.Tpo $(DEPDIR)/zaz-bezier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bezier.cpp' object='zaz-bezier.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-bezier.o `test -f 'bezier.cpp' || echo '$(srcdir)/'`bezier.cpp

zaz-bezier.obj: bezier.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-bezier.obj -MD -MP -MF $(DEPDIR)/zaz-bezier.Tpo -c -o zaz-bezier.obj `if test -f 'bezier.cpp'; then $(CYGPATH_W) 'bezier.cpp'; else $(CYGPATH_W) '$(srcdir)/bezier.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-bezier.Tpo $(DEPDIR)/zaz-bezier.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='bezier.cpp' object='zaz-bezier.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-bezier.obj `if test -f 'bezier.cpp'; then $(CYGPATH_W) 'bezier.cpp'; else $(CYGPATH_W) '$(srcdir)/bezier.cpp'; fi`

zaz-textureloader.o: textureloader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-textureloader.o -MD -MP -MF $(DEPDIR)/zaz-textureloader.Tpo -c -o zaz-textureloader.o `test -f 'textureloader.cpp' || echo '$(srcdir)/'`textureloader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-textureloader.Tpo $(DEPDIR)/zaz-textureloader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='textureloader.cpp' object='zaz-textureloader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-textureloader.o `test -f 'textureloader.cpp' || echo '$(srcdir)/'`textureloader.cpp

zaz-textureloader.obj: textureloader.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-textureloader.obj -MD -MP -MF $(DEPDIR)/zaz-textureloader.Tpo -c -o zaz-textureloader.obj `if test -f 'textureloader.cpp'; then $(CYGPATH_W) 'textureloader.cpp'; else $(CYGPATH_W) '$(srcdir)/textureloader.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-textureloader.Tpo $(DEPDIR)/zaz-textureloader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='textureloader.cpp' object='zaz-textureloader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-textureloader.obj `if test -f 'textureloader.cpp'; then $(CYGPATH_W) 'textureloader.cpp'; else $(CYGPATH_W) '$(srcdir)/textureloader.cpp'; fi`

zaz-player.o: player.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-player.o -MD -MP -MF $(DEPDIR)/zaz-player.Tpo -c -o zaz-player.o `test -f 'player.cpp' || echo '$(srcdir)/'`player.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-player.Tpo $(DEPDIR)/zaz-player.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='player.cpp' object='zaz-player.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-player.o `test -f 'player.cpp' || echo '$(srcdir)/'`player.cpp

zaz-player.obj: player.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-player.obj -MD -MP -MF $(DEPDIR)/zaz-player.Tpo -c -o zaz-player.obj `if test -f 'player.cpp'; then $(CYGPATH_W) 'player.cpp'; else $(CYGPATH_W) '$(srcdir)/player.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-player.Tpo $(DEPDIR)/zaz-player.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='player.cpp' object='zaz-player.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-player.obj `if test -f 'player.cpp'; then $(CYGPATH_W) 'player.cpp'; else $(CYGPATH_W) '$(srcdir)/player.cpp'; fi`

zaz-level.o: level.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-level.o -MD -MP -MF $(DEPDIR)/zaz-level.Tpo -c -o zaz-level.o `test -f 'level.cpp' || echo '$(srcdir)/'`level.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-level.Tpo $(DEPDIR)/zaz-level.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='level.cpp' object='zaz-level.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-level.o `test -f 'level.cpp' || echo '$(srcdir)/'`level.cpp

zaz-level.obj: level.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-level.obj -MD -MP -MF $(DEPDIR)/zaz-level.Tpo -c -o zaz-level.obj `if test -f 'level.cpp'; then $(CYGPATH_W) 'level.cpp'; else $(CYGPATH_W) '$(srcdir)/level.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-level.Tpo $(DEPDIR)/zaz-level.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='level.cpp' object='zaz-level.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-level.obj `if test -f 'level.cpp'; then $(CYGPATH_W) 'level.cpp'; else $(CYGPATH_W) '$(srcdir)/level.cpp'; fi`

zaz-ballpath.o: ballpath.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-ballpath.o -MD -MP -MF $(DEPDIR)/zaz-ballpath.Tpo -c -o zaz-ballpath.o `test -f 'ballpath.cpp' || echo '$(srcdir)/'`ballpath.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-ballpath.Tpo $(DEPDIR)/zaz-ballpath.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ballpath.cpp' object='zaz-ballpath.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-ballpath.o `test -f 'ballpath.cpp' || echo '$(srcdir)/'`ballpath.cpp

zaz-ballpath.obj: ballpath.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-ballpath.obj -MD -MP -MF $(DEPDIR)/zaz-ballpath.Tpo -c -o zaz-ballpath.obj `if test -f 'ballpath.cpp'; then $(CYGPATH_W) 'ballpath.cpp'; else $(CYGPATH_W) '$(srcdir)/ballpath.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-ballpath.Tpo $(DEPDIR)/zaz-ballpath.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ballpath.cpp' object='zaz-ballpath.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-ballpath.obj `if test -f 'ballpath.cpp'; then $(CYGPATH_W) 'ballpath.cpp'; else $(CYGPATH_W) '$(srcdir)/ballpath.cpp'; fi`

zaz-game.o: game.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-game.o -MD -MP -MF $(DEPDIR)/zaz-game.Tpo -c -o zaz-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-game.Tpo $(DEPDIR)/zaz-game.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='game.cpp' object='zaz-game.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-game.o `test -f 'game.cpp' || echo '$(srcdir)/'`game.cpp

zaz-game.obj: game.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-game.obj -MD -MP -MF $(DEPDIR)/zaz-game.Tpo -c -o zaz-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-game.Tpo $(DEPDIR)/zaz-game.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='game.cpp' object='zaz-game.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-game.obj `if test -f 'game.cpp'; then $(CYGPATH_W) 'game.cpp'; else $(CYGPATH_W) '$(srcdir)/game.cpp'; fi`

zaz-editor.o: editor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-editor.o -MD -MP -MF $(DEPDIR)/zaz-editor.Tpo -c -o zaz-editor.o `test -f 'editor.cpp' || echo '$(srcdir)/'`editor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-editor.Tpo $(DEPDIR)/zaz-editor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='editor.cpp' object='zaz-editor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-editor.o `test -f 'editor.cpp' || echo '$(srcdir)/'`editor.cpp

zaz-editor.obj: editor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-editor.obj -MD -MP -MF $(DEPDIR)/zaz-editor.Tpo -c -o zaz-editor.obj `if test -f 'editor.cpp'; then $(CYGPATH_W) 'editor.cpp'; else $(CYGPATH_W) '$(srcdir)/editor.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-editor.Tpo $(DEPDIR)/zaz-editor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='editor.cpp' object='zaz-editor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-editor.obj `if test -f 'editor.cpp'; then $(CYGPATH_W) 'editor.cpp'; else $(CYGPATH_W) '$(srcdir)/editor.cpp'; fi`

zaz-mainmenu.o: mainmenu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-mainmenu.o -MD -MP -MF $(DEPDIR)/zaz-mainmenu.Tpo -c -o zaz-mainmenu.o `test -f 'mainmenu.cpp' || echo '$(srcdir)/'`mainmenu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-mainmenu.Tpo $(DEPDIR)/zaz-mainmenu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='mainmenu.cpp' object='zaz-mainmenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-mainmenu.o `test -f 'mainmenu.cpp' || echo '$(srcdir)/'`mainmenu.cpp

zaz-mainmenu.obj: mainmenu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-mainmenu.obj -MD -MP -MF $(DEPDIR)/zaz-mainmenu.Tpo -c -o zaz-mainmenu.obj `if test -f 'mainmenu.cpp'; then $(CYGPATH_W) 'mainmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/mainmenu.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-mainmenu.Tpo $(DEPDIR)/zaz-mainmenu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='mainmenu.cpp' object='zaz-mainmenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-mainmenu.obj `if test -f 'mainmenu.cpp'; then $(CYGPATH_W) 'mainmenu.cpp'; else $(CYGPATH_W) '$(srcdir)/mainmenu.cpp'; fi`

zaz-menu.o: menu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-menu.o -MD -MP -MF $(DEPDIR)/zaz-menu.Tpo -c -o zaz-menu.o `test -f 'menu.cpp' || echo '$(srcdir)/'`menu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-menu.Tpo $(DEPDIR)/zaz-menu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='menu.cpp' object='zaz-menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-menu.o `test -f 'menu.cpp' || echo '$(srcdir)/'`menu.cpp

zaz-menu.obj: menu.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-menu.obj -MD -MP -MF $(DEPDIR)/zaz-menu.Tpo -c -o zaz-menu.obj `if test -f 'menu.cpp'; then $(CYGPATH_W) 'menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-menu.Tpo $(DEPDIR)/zaz-menu.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='menu.cpp' object='zaz-menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-menu.obj `if test -f 'menu.cpp'; then $(CYGPATH_W) 'menu.cpp'; else $(CYGPATH_W) '$(srcdir)/menu.cpp'; fi`

zaz-gameloop.o: gameloop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-gameloop.o -MD -MP -MF $(DEPDIR)/zaz-gameloop.Tpo -c -o zaz-gameloop.o `test -f 'gameloop.cpp' || echo '$(srcdir)/'`gameloop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-gameloop.Tpo $(DEPDIR)/zaz-gameloop.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='gameloop.cpp' object='zaz-gameloop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-gameloop.o `test -f 'gameloop.cpp' || echo '$(srcdir)/'`gameloop.cpp

zaz-gameloop.obj: gameloop.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-gameloop.obj -MD -MP -MF $(DEPDIR)/zaz-gameloop.Tpo -c -o zaz-gameloop.obj `if test -f 'gameloop.cpp'; then $(CYGPATH_W) 'gameloop.cpp'; else $(CYGPATH_W) '$(srcdir)/gameloop.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-gameloop.Tpo $(DEPDIR)/zaz-gameloop.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='gameloop.cpp' object='zaz-gameloop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-gameloop.obj `if test -f 'gameloop.cpp'; then $(CYGPATH_W) 'gameloop.cpp'; else $(CYGPATH_W) '$(srcdir)/gameloop.cpp'; fi`

zaz-hiscores.o: hiscores.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-hiscores.o -MD -MP -MF $(DEPDIR)/zaz-hiscores.Tpo -c -o zaz-hiscores.o `test -f 'hiscores.cpp' || echo '$(srcdir)/'`hiscores.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-hiscores.Tpo $(DEPDIR)/zaz-hiscores.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='hiscores.cpp' object='zaz-hiscores.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-hiscores.o `test -f 'hiscores.cpp' || echo '$(srcdir)/'`hiscores.cpp

zaz-hiscores.obj: hiscores.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-hiscores.obj -MD -MP -MF $(DEPDIR)/zaz-hiscores.Tpo -c -o zaz-hiscores.obj `if test -f 'hiscores.cpp'; then $(CYGPATH_W) 'hiscores.cpp'; else $(CYGPATH_W) '$(srcdir)/hiscores.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-hiscores.Tpo $(DEPDIR)/zaz-hiscores.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='hiscores.cpp' object='zaz-hiscores.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-hiscores.obj `if test -f 'hiscores.cpp'; then $(CYGPATH_W) 'hiscores.cpp'; else $(CYGPATH_W) '$(srcdir)/hiscores.cpp'; fi`

zaz-lineeditor.o: lineeditor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-lineeditor.o -MD -MP -MF $(DEPDIR)/zaz-lineeditor.Tpo -c -o zaz-lineeditor.o `test -f 'lineeditor.cpp' || echo '$(srcdir)/'`lineeditor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-lineeditor.Tpo $(DEPDIR)/zaz-lineeditor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='lineeditor.cpp' object='zaz-lineeditor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-lineeditor.o `test -f 'lineeditor.cpp' || echo '$(srcdir)/'`lineeditor.cpp

zaz-lineeditor.obj: lineeditor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-lineeditor.obj -MD -MP -MF $(DEPDIR)/zaz-lineeditor.Tpo -c -o zaz-lineeditor.obj `if test -f 'lineeditor.cpp'; then $(CYGPATH_W) 'lineeditor.cpp'; else $(CYGPATH_W) '$(srcdir)/lineeditor.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-lineeditor.Tpo $(DEPDIR)/zaz-lineeditor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='lineeditor.cpp' object='zaz-lineeditor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-lineeditor.obj `if test -f 'lineeditor.cpp'; then $(CYGPATH_W) 'lineeditor.cpp'; else $(CYGPATH_W) '$(srcdir)/lineeditor.cpp'; fi`

zaz-tests.o: tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-tests.o -MD -MP -MF $(DEPDIR)/zaz-tests.Tpo -c -o zaz-tests.o `test -f 'tests.cpp' || echo '$(srcdir)/'`tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-tests.Tpo $(DEPDIR)/zaz-tests.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests.cpp' object='zaz-tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-tests.o `test -f 'tests.cpp' || echo '$(srcdir)/'`tests.cpp

zaz-tests.obj: tests.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-tests.obj -MD -MP -MF $(DEPDIR)/zaz-tests.Tpo -c -o zaz-tests.obj `if test -f 'tests.cpp'; then $(CYGPATH_W) 'tests.cpp'; else $(CYGPATH_W) '$(srcdir)/tests.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-tests.Tpo $(DEPDIR)/zaz-tests.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests.cpp' object='zaz-tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-tests.obj `if test -f 'tests.cpp'; then $(CYGPATH_W) 'tests.cpp'; else $(CYGPATH_W) '$(srcdir)/tests.cpp'; fi`

zaz-profile.o: profile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-profile.o -MD -MP -MF $(DEPDIR)/zaz-profile.Tpo -c -o zaz-profile.o `test -f 'profile.cpp' || echo '$(srcdir)/'`profile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-profile.Tpo $(DEPDIR)/zaz-profile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='profile.cpp' object='zaz-profile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-profile.o `test -f 'profile.cpp' || echo '$(srcdir)/'`profile.cpp

zaz-profile.obj: profile.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-profile.obj -MD -MP -MF $(DEPDIR)/zaz-profile.Tpo -c -o zaz-profile.obj `if test -f 'profile.cpp'; then $(CYGPATH_W) 'profile.cpp'; else $(CYGPATH_W) '$(srcdir)/profile.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-profile.Tpo $(DEPDIR)/zaz-profile.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='profile.cpp' object='zaz-profile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-profile.obj `if test -f 'profile.cpp'; then $(CYGPATH_W) 'profile.cpp'; else $(CYGPATH_W) '$(srcdir)/profile.cpp'; fi`

zaz-directorylister.o: directorylister.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-directorylister.o -MD -MP -MF $(DEPDIR)/zaz-directorylister.Tpo -c -o zaz-directorylister.o `test -f 'directorylister.cpp' || echo '$(srcdir)/'`directorylister.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-directorylister.Tpo $(DEPDIR)/zaz-directorylister.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='directorylister.cpp' object='zaz-directorylister.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-directorylister.o `test -f 'directorylister.cpp' || echo '$(srcdir)/'`directorylister.cpp

zaz-directorylister.obj: directorylister.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-directorylister.obj -MD -MP -MF $(DEPDIR)/zaz-directorylister.Tpo -c -o zaz-directorylister.obj `if test -f 'directorylister.cpp'; then $(CYGPATH_W) 'directorylister.cpp'; else $(CYGPATH_W) '$(srcdir)/directorylister.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-directorylister.Tpo $(DEPDIR)/zaz-directorylister.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='directorylister.cpp' object='zaz-directorylister.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-directorylister.obj `if test -f 'directorylister.cpp'; then $(CYGPATH_W) 'directorylister.cpp'; else $(CYGPATH_W) '$(srcdir)/directorylister.cpp'; fi`

zaz-levelset.o: levelset.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-levelset.o -MD -MP -MF $(DEPDIR)/zaz-levelset.Tpo -c -o zaz-levelset.o `test -f 'levelset.cpp' || echo '$(srcdir)/'`levelset.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-levelset.Tpo $(DEPDIR)/zaz-levelset.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='levelset.cpp' object='zaz-levelset.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-levelset.o `test -f 'levelset.cpp' || echo '$(srcdir)/'`levelset.cpp

zaz-levelset.obj: levelset.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-levelset.obj -MD -MP -MF $(DEPDIR)/zaz-levelset.Tpo -c -o zaz-levelset.obj `if test -f 'levelset.cpp'; then $(CYGPATH_W) 'levelset.cpp'; else $(CYGPATH_W) '$(srcdir)/levelset.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-levelset.Tpo $(DEPDIR)/zaz-levelset.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='levelset.cpp' object='zaz-levelset.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-levelset.obj `if test -f 'levelset.cpp'; then $(CYGPATH_W) 'levelset.cpp'; else $(CYGPATH_W) '$(srcdir)/levelset.cpp'; fi`

zaz-splash.o: splash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-splash.o -MD -MP -MF $(DEPDIR)/zaz-splash.Tpo -c -o zaz-splash.o `test -f 'splash.cpp' || echo '$(srcdir)/'`splash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-splash.Tpo $(DEPDIR)/zaz-splash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='splash.cpp' object='zaz-splash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-splash.o `test -f 'splash.cpp' || echo '$(srcdir)/'`splash.cpp

zaz-splash.obj: splash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -MT zaz-splash.obj -MD -MP -MF $(DEPDIR)/zaz-splash.Tpo -c -o zaz-splash.obj `if test -f 'splash.cpp'; then $(CYGPATH_W) 'splash.cpp'; else $(CYGPATH_W) '$(srcdir)/splash.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/zaz-splash.Tpo $(DEPDIR)/zaz-splash.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='splash.cpp' object='zaz-splash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zaz_CXXFLAGS) $(CXXFLAGS) -c -o zaz-splash.obj `if test -f 'splash.cpp'; then $(CYGPATH_W) 'splash.cpp'; else $(CYGPATH_W) '$(srcdir)/splash.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/zaz-audiobuffer.Po
	-rm -f ./$(DEPDIR)/zaz-ballpath.Po
	-rm -f ./$(DEPDIR)/zaz-bezier.Po
	-rm -f ./$(DEPDIR)/zaz-directorylister.Po
	-rm -f ./$(DEPDIR)/zaz-editor.Po
	-rm -f ./$(DEPDIR)/zaz-frame_events.Po
	-rm -f ./$(DEPDIR)/zaz-game.Po
	-rm -f ./$(DEPDIR)/zaz-gameloop.Po
	-rm -f ./$(DEPDIR)/zaz-hiscores.Po
	-rm -f ./$(DEPDIR)/zaz-level.Po
	-rm -f ./$(DEPDIR)/zaz-levelset.Po
	-rm -f ./$(DEPDIR)/zaz-lineeditor.Po
	-rm -f ./$(DEPDIR)/zaz-main.Po
	-rm -f ./$(DEPDIR)/zaz-mainmenu.Po
	-rm -f ./$(DEPDIR)/zaz-menu.Po
	-rm -f ./$(DEPDIR)/zaz-mixer.Po
	-rm -f ./$(DEPDIR)/zaz-oggsample.Po
	-rm -f ./$(DEPDIR)/zaz-ogvexport.Po
	-rm -f ./$(DEPDIR)/zaz-player.Po
	-rm -f ./$(DEPDIR)/zaz-profile.Po
	-rm -f ./$(DEPDIR)/zaz-scene.Po
	-rm -f ./$(DEPDIR)/zaz-settings.Po
	-rm -f ./$(DEPDIR)/zaz-splash.Po
	-rm -f ./$(DEPDIR)/zaz-streamingoggsample.Po
	-rm -f ./$(DEPDIR)/zaz-tests.Po
	-rm -f ./$(DEPDIR)/zaz-textureloader.Po
	-rm -f ./$(DEPDIR)/zaz-wavesample.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/zaz-audiobuffer.Po
	-rm -f ./$(DEPDIR)/zaz-ballpath.Po
	-rm -f ./$(DEPDIR)/zaz-bezier.Po
	-rm -f ./$(DEPDIR)/zaz-directorylister.Po
	-rm -f ./$(DEPDIR)/zaz-editor.Po
	-rm -f ./$(DEPDIR)/zaz-frame_events.Po
	-rm -f ./$(DEPDIR)/zaz-game.Po
	-rm -f ./$(DEPDIR)/zaz-gameloop.Po
	-rm -f ./$(DEPDIR)/zaz-hiscores.Po
	-rm -f ./$(DEPDIR)/zaz-level.Po
	-rm -f ./$(DEPDIR)/zaz-levelset.Po
	-rm -f ./$(DEPDIR)/zaz-lineeditor.Po
	-rm -f ./$(DEPDIR)/zaz-main.Po
	-rm -f ./$(DEPDIR)/zaz-mainmenu.Po
	-rm -f ./$(DEPDIR)/zaz-menu.Po
	-rm -f ./$(DEPDIR)/zaz-mixer.Po
	-rm -f ./$(DEPDIR)/zaz-oggsample.Po
	-rm -f ./$(DEPDIR)/zaz-ogvexport.Po
	-rm -f ./$(DEPDIR)/zaz-player.Po
	-rm -f ./$(DEPDIR)/zaz-profile.Po
	-rm -f ./$(DEPDIR)/zaz-scene.Po
	-rm -f ./$(DEPDIR)/zaz-settings.Po
	-rm -f ./$(DEPDIR)/zaz-splash.Po
	-rm -f ./$(DEPDIR)/zaz-streamingoggsample.Po
	-rm -f ./$(DEPDIR)/zaz-tests.Po
	-rm -f ./$(DEPDIR)/zaz-textureloader.Po
	-rm -f ./$(DEPDIR)/zaz-wavesample.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile

	$(FTGL_CFLAGS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
